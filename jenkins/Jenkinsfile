pipeline {
    agent any
    options {
        skipDefaultCheckout(true)
    }
    tools { nodejs "20.15.0"}
    // triggers {
    //     pollSCM('H 9,12,17 * * *')
    // }
    stages {
        stage ('clean workspace') {
            steps {
                echo 'Cleaning workspace...'
                cleanWs()
                echo 'Cleaning done'
            } 
        }
        stage ('clone') {
            steps {
                checkout scm
                echo 'Cloning...'
                git branch: 'S11P12D202-810-we-멀티-프로필-관리', credentialsId: 'gitlab-repo', url: 'https://lab.ssafy.com/s11-webmobile1-sub2/S11P12D202.git'
                echo 'Cloning done'
            }
        }
        stage('FE-Build') {
            steps {
                echo "FE Building.."
                dir('./frontend') {
                    withCredentials([file(credentialsId: 'frontend-env', variable: 'ENV_FILE')]) {
                        sh 'cat $ENV_FILE > .env'
                    }
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }
        stage('FE-Delivery') {
            steps {
                dir('./frontend') {
                    echo "Delivery FE Image.."
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                        sh 'docker build -t $DOCKER_USERNAME/moducha_frontend:\${env.BUILD_ID} .'
                        sh 'docker tag $DOCKER_USERNAME/moducha_frontend:\${env.BUILD_ID} $DOCKER_USERNAME/moducha_frontend:latest'
                        sh 'docker push $DOCKER_USERNAME/moducha_frontend:\${env.BUILD_ID}'
                        sh 'docker push $DOCKER_USERNAME/moducha_frontend:latest'
                    }
                }
            }
        }
    //     stage('BE-Build') {
    //         steps {
    //             echo "BE Building.."
    //             dir('./backend') {
    //                 sh '''
    //                 ./gradlew clean build -x test
    //                 '''
    //             }
    //         }
    //     }
    //     stage('BE-Delivery') {
    //         steps {
    //             dir('./backend') {
    //                 echo "Delivery BE Image.."
    //                 withCredentials([string(credentialsId: 'github-oauth-token', variable: 'GITHUB_OAUTH_TOKEN')]) {
    //                     sh '''
    //                     docker login -u $DOCKER_ID -p $GITHUB_OAUTH_TOKEN
    //                     docker.build("${DOCKER_ID}/moducha_backend:${env.BUILD_ID}")
    //                     docker.tag("${DOCKER_ID}/moducha_backend:${env.BUILD_ID}", "${DOCKER_ID}/moducha_backend:latest")
    //                     docker.push("${DOCKER_ID}/moducha_backend:${env.BUILD_ID}")
    //                     docker.push("${DOCKER_ID}/moducha_backend:latest")
    //                     '''
    //                 }
    //             }
    //         }
    //     }
    }
    post {
        always {
            cleanWs(cleanWhenNotBuilt: false, deleteDirs: true, 
            disableDeferredWipeout: true, notFailBuild: true)
        }
    }
}